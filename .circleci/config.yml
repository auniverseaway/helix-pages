version: 2.1

executors:
  node8:
    docker:
      # use latest node 8 on debian 8 (jessie)
      - image: circleci/node:8-jessie
    environment:
      NPM_CONFIG_PREFIX: ~/.npm-global
  cypress:
    docker:
      - image: cypress/base:8
    environment:
        ## this enables colors in the output
        TERM: xterm
        NPM_CONFIG_PREFIX: ~/.npm-global
  

commands:
  setup:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: Install npm 6.4.1
          command: npm -g install npm@6.4.1
      - run:
          name: Installing Dependencies
          command: npm ci
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: prepare test git user
          command: git config --global user.email "circleci@project-helix.page" && git config --global user.name "CircleCi Build"

jobs:
  local:
    executor: cypress
    steps:
        - setup

        - run:
            name: Lint
            command: npm run lint

        - run:
            name: Installing Helix CLI
            command: npm install @adobe/helix-cli --save=false

        - run:
            name: Run (Cypress) tests
            command: env CYPRESS_baseUrl="http://localhost:3000" npm run test:record

  remote:
    executor: cypress
    steps:
        - setup

        - run:
            name: Installing Helix CLI
            command: npm install @adobe/helix-cli --save=false

        - run:
            name: Build Templates
            command: npx hlx build

        - run:
            name: Reset Working Copy
            command: git status; git checkout -- .

        - run:
            name: Deploy to Adobe I/O Runtime
            command: npx hlx deploy --add test_$CIRCLE_BUILD_NUM | cat

        - run:
            name: Compute TEST_DOMAIN and TEST_SERVICE
            command: |
              modulo=$(expr $CIRCLE_BUILD_NUM % 3 + 1)
              name="TEST_DOMAIN_$modulo"
              TEST_DOMAIN=${!name}
              name="TEST_SERVICE_$modulo"
              TEST_SERVICE=${!name}
              echo "TEST_DOMAIN has been found - $TEST_DOMAIN"
              echo "TEST_SERVICE has been found - $TEST_SERVICE"

        - run:
            name: Publish to Fastly
            command: npx hlx publish --custom-vcl='vcl/extensions.vcl' --fastly-namespace $TEST_SERVICE | cat

        - run:
            name: Run (Cypress) tests
            command: env CYPRESS_baseUrl=https://www.$TEST_DOMAIN" npm run test:record

  publish:
    executor: node8
    steps:
      - setup

      - run:
          name: Installing Helix CLI
          command: npm install @adobe/helix-cli@"=4" --save=false

      - run:
          name: Build Templates
          command: npx hlx build

      - run:
          name: Reset Working Copy
          command: git status; git checkout -- .

      - run:
          name: Deploy to Adobe I/O Runtime
          command: npx hlx deploy | cat

      - run:
          name: Publish to Fastly
          command: npx hlx publish --custom-vcl='vcl/extensions.vcl' | cat

      - add_ssh_keys
      - run:
          name: Commit helix config to master
          command: |
            git checkout master
            git pull --tags origin
            git commit -am "ðŸš¢ enshrining config post-deploy [ci skip]"

      - run:
          name: Tag known good deploy
          command: |
            git tag `date "+known-good-%Y%m%d%H%M%S"`
            git push --tags origin master

workflows:
  version: 2
  build:
    jobs:
      # - local
      - remote
      # - publish:
      #     requires:
      #       - local
      #     filters:
      #       branches:
      #         only: master
